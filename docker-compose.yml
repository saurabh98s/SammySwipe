version: '3.8'

services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.15.0
    container_name: sammyswipe-neo4j
    ports:
      - "7474:7474"  
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/sammy_swipe_secret
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_default__database=neo4j
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "sammy_swipe_secret", "-d", "neo4j", "MATCH () RETURN count(*) as count"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 40s
    networks:
      - sammy_net

  # Data Initialization Service
  init:
    build:
      context: .
      dockerfile: Dockerfile.ml
    volumes:
      - ./ml:/app/ml
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=sammy_swipe_secret
      - PYTHONPATH=/app
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - sammy_net
    command: >
      sh -c "
        echo 'Initializing data...' &&
        python -m ml.data.init_data &&
        echo 'Training models...' &&
        python -m ml.training.train
      "
    restart: "no"

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: sammyswipe-backend
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=sammy_swipe_secret
      - JWT_SECRET_KEY=your_jwt_secret_key_here_change_in_production
      - POPULATE_DB_ON_STARTUP=True
      - RANDOM_USER_COUNT=1000
      - API_V1_STR=/api/v1
      - SUPERADMIN_MODE=true
    volumes:
      - ./ml:/app/ml
      - ./backend:/app/backend
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - sammy_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: sammyswipe-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    restart: unless-stopped

networks:
  sammy_net:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
